{"version":3,"sources":["algoritmes/BinaryTree.js","algoritmes/Doorlooplijn.js","visualizer/PureCanvas.jsx","visualizer/Visualizer.jsx","visualizer/TreeVisualizer.jsx","App.js","serviceWorker.js","index.js"],"names":["Node","key","value","col","this","left","right","color","isRed","bind","node","RedBlackBST","root","size","free","put","h","val","rotateLeft","rotateRight","flipColors","x","up","down","upUtil","curnode","lastLeft","res","leftmost","downUtil","lastRight","rightmost","current","distance","point1","point2","Math","sqrt","pow","y","PureCanvas","props","nodeRef","setNodeRef","elem","contextRef","getContext","clickHandler","event","onClick","width","height","ref","React","Component","Visualizer","setContext","ctx","canvas","componentDidUpdate","points","save","beginPath","clearRect","fillStyle","map","point","fillText","String","fillRect","length","currentPoint","moveTo","POINT_WIDTH","lineTo","stroke","closestPair","first","second","console","log","setLineDash","lineWidth","strokeStyle","restore","TreeVisualizer","useState","drawNode","depth","fullDepth","ceil","log2","tree","arc","PI","useEffect","WIDTH","App","canvasClick","e","state","started","rect","getBoundingClientRect","xpos","clientX","ypos","clientY","top","setPoints","sort","a","b","nexButtonClick","step","setState","prevState","treeChanged","resetButtonClick","reset","className","currentIndex","disabled","status","withHook","useRef","Number","MAX_SAFE_INTEGER","setClosestPair","setCurrentIndex","newIndex","insert","nnearest","result","filter","useDoorloop","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1d415869.chunk.js","sourcesContent":["const BLACK = 0;\nconst RED = 1;\n\nclass Node {\n  constructor(key, value, col) {\n    this.key = key;\n    this.value = value;\n    this.left = null;\n    this.right = null;\n    this.color = col;\n    this.isRed = this.isRed.bind(this);\n  }\n\n  free() {\n    this.left = null;\n    this.right = null;\n  }\n\n  isRed() {\n    return this.color === RED;\n  }\n}\n\nfunction isRed(node) {\n  return node !== null && node.isRed();\n}\n\nexport class RedBlackBST {\n  constructor() {\n    this.root = null;\n    this.size = 0;\n    this.free = this.free.bind(this);\n  }\n\n  free() {\n    this.size = 0;\n    this.root = null;\n  }\n\n  insert(key, value) {\n    this.root = this.put(this.root, key, value);\n    this.root.color = BLACK;\n    this.size++;\n  }\n\n  put(h, key, val) {\n    if (h == null) return new Node(key, val, RED);\n\n    if (key < h.key) h.left = this.put(h.left, key, val);\n    else if (key > h.key) h.right = this.put(h.right, key, val);\n\n    if (isRed(h.right) && !isRed(h.left)) h = this.rotateLeft(h);\n    if (isRed(h.left) && isRed(h.left.left)) h = this.rotateRight(h);\n    if (isRed(h.left) && isRed(h.right)) this.flipColors(h);\n\n    return h;\n  }\n\n  rotateLeft(h) {\n    const x = h.right;\n    h.right = x.left;\n    x.left = h;\n    x.color = h.color;\n    h.color = RED;\n    return x;\n  }\n\n  rotateRight(h) {\n    const x = h.left;\n    h.left = x.right;\n    x.right = h;\n    x.color = h.color;\n    h.color = RED;\n    return x;\n  }\n\n  flipColors(h) {\n    h.color = RED;\n    h.left.color = BLACK;\n    h.right.color = BLACK; \n  }\n\n  // nearest(key) {\n  //   if (key === this.root.key) return [null, null];\n  //   return this.nearestRec(this.root, key, null, null);\n  // }\n\n  // nearestRec(h, key, prev, prev_prev) {\n  //   if (key === h.key) return [prev, prev_prev];\n  //   else if (key < h.key) return this.nearestRec(h.left, key, h, prev);\n  //   else return this.nearestRec(h.right, key, h, prev);\n  // }\n\n  nnearest(key) {\n    // if (this.root !== null && this.root.right !== null) return [this.root.value, this.root.right.value];\n    if (this.root === null) return [null,null];\n    return [this.up(key), this.down(key)];\n  }\n\n  up(key) {\n    return this.upUtil(key, this.root, null);\n  }\n\n  upUtil(key, curnode, lastLeft) {\n    var res = null;\n    if (key === curnode.key) {\n      res = this.leftmost(curnode.right);\n      return res === null ? lastLeft : res;\n    }\n    else if (key < curnode.key) return this.upUtil(key, curnode.left, curnode);\n    else return this.upUtil(key, curnode.right, lastLeft);\n  }\n\n  down(key) {\n    return this.downUtil(key, this.root, null);\n  }\n\n  downUtil(key, curnode, lastRight) {\n    var res = null;\n    if (key === curnode.key) {\n      res = this.rightmost(curnode.left);\n      return res === null ? lastRight : res;\n    }\n    else if (key > curnode.key) return this.downUtil(key, curnode.right, curnode);\n    else return this.downUtil(key, curnode.left, lastRight)\n  }\n\n  leftmost(node) {\n    if (node === null) return null;\n\n    var current = node;\n    while( current.left !== null ){\n      current = current.left;\n    }\n    return current;\n  }\n\n  rightmost(node) {\n    if (node === null) return null;\n\n    var current = node;\n    while( current.right !== null ){\n      current = current.right;\n    }\n    return current;\n  }\n}","/**\n * DoorlooplijnAlgo:\n *  - initialiseer met rij punten\n *  - step function conveying current status\n *    -> current closest pair\n *    -> current delta\n *    -> indicate completion?\n */\n\nimport { useState, useRef } from \"react\"\nimport { RedBlackBST } from \"./BinaryTree\"\n\nfunction distance(point1, point2) {\n  const res = Math.sqrt( Math.pow( point1.x - point2.x , 2 ) \n                  + Math.pow( point1.y - point2.y, 2 ));\n  return res;\n}\n\nexport default function useDoorloop() {\n  const status = useRef(new RedBlackBST());\n\n  const [points, setPoints] = useState([]);\n  const [closestPair, setClosestPair] = useState({\n    first: null, second: null, distance: Number.MAX_SAFE_INTEGER\n  });\n  const [currentIndex, setCurrentIndex] = useState(-1);\n\n  const step = () => {\n    const newIndex = currentIndex + 1;\n    setCurrentIndex(newIndex);\n    const point = points[newIndex];\n    status.current.insert(point.y, point);\n\n    const res = status.current.nnearest(point.y)\n    console.log(res)\n    const result = res\n                    .filter( (elem) => elem !== null && distance(point, elem.value) < closestPair.distance)\n                    .sort( (a, b) =>  distance(a.value, point) - distance(b.value, point));\n    \n    if (result.length > 0) {\n      setClosestPair({\n        first: point, second: result[0].value, distance: distance(point, result[0].value)\n      })\n    }\n    \n  }\n\n  const reset = () => {\n    status.current.free();\n    setCurrentIndex(-1);\n    setClosestPair({\n      first: null, second: null, distance: Number.MAX_SAFE_INTEGER\n    });\n    setPoints([]);\n  }\n\n  return [status, closestPair, step, currentIndex, setPoints, reset, points];\n}","import React from 'react'\n\nexport default class PureCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.nodeRef = null;\n\n    this.setNodeRef = elem => {\n      this.nodeRef = elem;\n      props.contextRef(elem.getContext('2d'));\n    }\n    \n    this.clickHandler = event => {\n      if (props.onClick)\n        props.onClick(event, this.nodeRef);\n    }\n  }\n\n  render() {\n    return (\n      <canvas \n        onClick={this.clickHandler}\n        width={this.props.width}\n        height={this.props.height}\n        ref={this.setNodeRef}\n      />\n    );\n  }\n  \n}","import React from \"react\";\nimport PureCanvas from \"./PureCanvas\";\n\nexport const POINT_WIDTH = 10;\n\nclass Visualizer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setContext = this.setContext.bind(this);\n  }\n\n  setContext(ctx) {\n    this.ctx = ctx;\n    this.width = ctx.canvas.width;\n    this.height = ctx.canvas.height;\n  }\n\n  componentDidMount() {\n    this.componentDidUpdate();\n  }\n\n  componentDidUpdate() {\n    const {points, current} = this.props;\n    this.ctx.save();\n    this.ctx.beginPath();\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    // this.ctx.translate(this.width / 2, this.height / 2);\n    // this.ctx.rotate((angle * Math.PI) / 180);\n    this.ctx.fillStyle = '#4397AC';\n    \n    points.map( (point) => {\n      this.ctx.fillText(String(point.y), point.x + POINT_WIDTH + 2, point.y + POINT_WIDTH)\n      this.ctx.fillRect(\n        point.x,\n        point.y,\n        POINT_WIDTH,\n        POINT_WIDTH\n      );\n    })\n\n    if (current >= 0 && current < points.length) {\n      const currentPoint = points[current];\n      this.ctx.beginPath();\n      this.ctx.moveTo(currentPoint.x + POINT_WIDTH / 2, 0);\n      this.ctx.lineTo(currentPoint.x + POINT_WIDTH / 2, this.height);\n      this.ctx.stroke();\n    }\n\n    // Draw closest pair\n    const {first, second, distance} = this.props.closestPair;\n    if (first !== null) {\n      console.log(\"Drawing closest pair\")\n      this.ctx.beginPath();\n      this.ctx.moveTo(first.x + POINT_WIDTH / 2, first.y + POINT_WIDTH / 2);\n      this.ctx.lineTo(second.x + POINT_WIDTH / 2, second.y + POINT_WIDTH / 2);\n      this.ctx.setLineDash([10, 5]);\n      this.ctx.lineWidth = 2;\n      this.ctx.strokeStyle = \"#FF0000\";\n      this.ctx.stroke();\n\n      this.ctx.fillStyle = '#FF0000';\n      this.ctx.fillText(\"Closest pair\", second.x + POINT_WIDTH / 2, second.y - POINT_WIDTH)\n    }\n\n    this.ctx.restore();\n  }\n\n  render() {\n    return (\n      <PureCanvas height=\"500\" width=\"500\" onClick={this.props.onClick} contextRef={this.setContext}/>\n    );\n  }\n}\n\nexport default Visualizer;","import React, { useState } from 'react'\nimport { useEffect } from 'react';\nimport PureCanvas from './PureCanvas'\n\nconst HEIGHT = \"500\", WIDTH = \"500\";\n\nfunction TreeVisualizer (props) {\n\n  const [ctx, setContext] = useState(null);\n\n  const drawNodes = () => {\n    if (props.tree.current.root === null) return;\n    drawNode(WIDTH / 2, 55, props.tree.current.root, 0);\n  }\n\n  const drawNode = (x, y, node, depth) => {\n    const fullDepth = Math.ceil(Math.log2(props.tree.current.size));\n    ctx.beginPath();\n    ctx.arc(x, y, 25, 0, 2 * Math.PI);\n    ctx.strokeStyle =  node.color === 0? \"#000000\" : \"#FF0000\";\n    ctx.stroke();\n    ctx.fillText(String(node.key), x - 10, y + 5);\n    if (node.left !== null) drawNode(x - (30 * (fullDepth - depth) ), y + 55, node.left, depth + 1);\n    if (node.right !== null) drawNode(x + (30 * (fullDepth - depth) ), y + 55, node.right, depth + 1);\n  }\n  \n  useEffect(() => {\n    if (ctx === null) return;\n\n    ctx.save();\n    ctx.beginPath();\n    ctx.clearRect(0, 0, WIDTH, HEIGHT);\n\n    drawNodes();\n    // ctx.arc(WIDTH / 2, 75, 25, 0, 2 * Math.PI);\n    // ctx.fillText(String(props.tree.current.root.key), WIDTH / 2 - 10, 75 + 5);\n    // ctx.stroke();\n\n    return () => {\n      ctx.clearRect(0, 0, WIDTH, HEIGHT);\n    }\n  }, [props.tree.current.size])\n\n  return (\n      <PureCanvas height={HEIGHT} width={WIDTH} contextRef={setContext}></PureCanvas>\n  );\n}\n\nexport default TreeVisualizer;\n","import React from 'react';\nimport useDoorloop from './algoritmes/Doorlooplijn';\nimport './App.css';\nimport Visualizer, { POINT_WIDTH } from './visualizer/Visualizer.jsx';\nimport TreeVisualizer from './visualizer/TreeVisualizer';\n\n\nfunction withHook(Component) {\n  return function WrappedComponent(props) {\n    const [status, closestPair, step, currentIndex, setPoints, reset, points] = useDoorloop();\n    return <Component {...props} status={status} closestPair={closestPair} step={step} \n                      currentIndex={currentIndex} setPoints={setPoints} reset={reset} points={points}/>;\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      started: false,\n      treeChanged: false\n    }\n  }\n\n  canvasClick = (e, canvas) => {\n    if (this.state.started) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const xpos = e.clientX - rect.left - POINT_WIDTH;\n    const ypos = e.clientY - rect.top - POINT_WIDTH;\n    //TODO: Check if not colludign with existing points\n    this.props.setPoints([...this.props.points, {x: xpos, y: ypos}]\n      .sort((a, b) => a.x - b.x))\n        \n  }\n\n  nexButtonClick = (e) => {\n    this.props.step();\n    this.setState( (prevState) => ({\n      treeChanged: !prevState.treeChanged,\n      started: true\n    }))\n  }\n\n  resetButtonClick = (e) => {\n    this.props.reset();\n    this.setState( (prevState) => ({\n      started: false,\n      treeChanged: !prevState.treeChanged\n    }))\n  }\n\n  render () {\n    \n    return (\n      <div className=\"App\">\n        <Visualizer onClick={this.canvasClick} points={this.props.points} current={this.props.currentIndex} closestPair={this.props.closestPair}></Visualizer>\n        <button onClick={this.nexButtonClick} disabled={this.props.currentIndex === this.props.points.length - 1}>Next</button>\n        <button onClick={this.resetButtonClick}>RESET</button>\n        <TreeVisualizer tree={this.props.status}/>\n    </div>\n    );\n  }\n}\n\nexport default withHook(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}